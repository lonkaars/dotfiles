#!/bin/sh

MODE="$1"

get_color() {
	xrdb -query | grep $1 | head -n1 | cut -f2
}

hex_to_rgb_array() {
	printf "%d\n%d\n%d\n" "0x${1:1:2}" "0x${1:3:2}" "0x${1:5:2}" | jq -jc --slurp '.'
}

get_color_rgb_array() {
	hex_to_rgb_array "`get_color $1`"
}

mix_rgb() {
	R1="`printf "%d" "0x${1:1:2}"`"
	G1="`printf "%d" "0x${1:3:2}"`"
	B1="`printf "%d" "0x${1:5:2}"`"
	R2="`printf "%d" "0x${2:1:2}"`"
	G2="`printf "%d" "0x${2:3:2}"`"
	B2="`printf "%d" "0x${2:5:2}"`"
	
	printf "#"
	dc -e"$R1 $3 * $R2 1 $3 - * + 1 / p" | xargs printf "%02x"
	dc -e"$G1 $3 * $G2 1 $3 - * + 1 / p" | xargs printf "%02x"
	dc -e"$B1 $3 * $B2 1 $3 - * + 1 / p" | xargs printf "%02x"
}

switch_xrdb() {
	cat ~/.config/X11/base ~/.config/X11/$1 | xrdb
}

switch_dunst() {
	read -r -d '' conf << EOF
frame_color = "$(get_color color1)"

[urgency_low]
background = "$(get_color background)"
foreground = "$(get_color color1)"
timeout = 10

[urgency_normal]
background = "$(get_color background)"
foreground = "$(get_color foreground)"
timeout = 10

[urgency_critical]
background = "$(get_color color1)"
foreground = "$(get_color background)"
frame_color = "$(get_color color1)"
timeout = 0
EOF
	echo "$conf" | cat ~/.config/dunst/base - > ~/.config/dunst/dunstrc
}

switch_zathura() {
	read -r -d '' conf << EOF
set default-bg				"$(get_color background)"
set statusbar-bg			"$(get_color background)"
set inputbar-bg				"$(get_color background)"
set completion-highlight-fg	"$(get_color background)"
set completion-bg			"$(get_color background)"
set notification-error-fg	"$(get_color background)"
set notification-warning-fg	"$(get_color background)"
set notification-fg			"$(get_color background)"
set recolor-lightcolor		"$(get_color background)"

set default-fg			"$(get_color foreground)"
set inputbar-fg			"$(get_color foreground)"
set completion-fg		"$(get_color foreground)"
set statusbar-fg		"$(get_color foreground)"
set recolor-darkcolor	"$(get_color foreground)"

set notification-error-bg   "$(get_color color9)"
set notification-warning-bg "$(get_color color9)"
set completion-highlight-bg "$(get_color color9)"
set highlight-color         "$(get_color color9)"

set highlight-active-color "$(get_color color13)"
set notification-bg        "$(get_color color13)"
EOF
	echo "$conf" > ~/.config/zathura/colors
}

switch_gtk() {
	if [[ $1 == "light" ]]; then
		sed "s/-Dark/-Light/" -i ~/.config/gtk-3.0/settings.ini
		sed "s/gtk-application-prefer-dark-theme.*/gtk-application-prefer-dark-theme=false/" -i ~/.config/gtk-3.0/settings.ini
	else
		sed "s/-Light/-Dark/" -i ~/.config/gtk-3.0/settings.ini
		sed "s/gtk-application-prefer-dark-theme.*/gtk-application-prefer-dark-theme=true/" -i ~/.config/gtk-3.0/settings.ini
	fi
}

switch_fcitx5() {
	accent="$(get_color color9)"
	read -r -d '' conf << EOF
[InputPanel]
NormalColor=$(get_color foreground)
HighlightCandidateColor=$(get_color background)
HighlightColor=$(get_color color13)
HighlightBackgroundColor=$(get_color background)

[InputPanel/Background]
Color=$(get_color background)
BorderColor=${accent}

[InputPanel/Highlight]
Color=${accent}

[Menu/Background]
Color=$(get_color background)

[Menu]
NormalColor=$(get_color foreground)

[Menu/Highlight]
Color=${accent}

[Menu/Separator]
Color=$(get_color color7)
EOF
	echo "$conf" | cat ~/.local/share/fcitx5/themes/loek/base.conf - > ~/.local/share/fcitx5/themes/loek/theme.conf
}

switch_startpage() {
	read -r -d '' conf << EOF
/* AUTOMATICALLY GENERATED, DO NOT EDIT */

:root {
	--color0:  $(get_color color0);
	--color1:  $(get_color color1);
	--color2:  $(get_color color2);
	--color3:  $(get_color color3);
	--color4:  $(get_color color4);
	--color5:  $(get_color color5);
	--color6:  $(get_color color6);
	--color7:  $(get_color color7);
	--color8:  $(get_color color8);
	--color9:  $(get_color color9);
	--color10:  $(get_color color10);
	--color11:  $(get_color color11);
	--color12:  $(get_color color12);
	--color13:  $(get_color color13);
	--color14:  $(get_color color14);
	--color15:  $(get_color color15);
}
EOF
	echo "$conf" > ~/.config/startpage/colors.css
}

switch_chrome() {
	cd ~/.cache/wal/chromium
	rm -f 'Cached Theme.pak' 'bg.png' 'manifest.json'
	convert -size 100x100 "xc:`get_color background`" bg.png
  BG_ALT=$(mix_rgb $(get_color color8) $(get_color color0) '0.2')
  FG_ALT=$(mix_rgb $(get_color color15) $(get_color color8) '0.5')
	jq -nc \
		--argjson bg     "`get_color_rgb_array color0`" \
		--argjson bg_alt "`hex_to_rgb_array $BG_ALT`" \
		--argjson fg     "`get_color_rgb_array color7`" \
		--argjson fg_alt "`hex_to_rgb_array $FG_ALT`" \
		'{
			"description": "colorscheme generated by mode",
			"manifest_version": 2,
			"name": "mode theme",
			"theme": {
				"images": { "theme_frame": "bg.png" },
				"colors": {
					"frame": $bg,
					"button_background": $fg,
					"ntp_background": $bg,
					"ntp_text": $bg,
					"toolbar": $bg_alt,
					"tab_background_text": $fg_alt,
					"tab_background_text_inactive": $fg_alt,
					"tab_background_text_incognito": $fg_alt,
					"tab_background_text_incognito_inactive": $fg_alt,
					"bookmark_text": $fg,
					"tab_text": $fg
				},
				"tints": {
					"buttons": [ -1, -1, -1 ],
					"frame_inactive": [ -1, -1, -1 ],
					"frame_incognito": [ -1, -1, -1 ],
					"frame_incognito_inactive": [ -1, -1, -1 ]
				}
			},
			"version": "2"
		}' > manifest.json
}

reload_terms() {
	read -r -d '' escape_msgs << EOF
\033]11;$(get_color background)\007
\033]10;$(get_color foreground)\007
\033]12;$(get_color foreground)\007
\033]14;$(get_color background)\007
\033]13;$(get_color foreground)\007
\033]17;$(get_color color8)\007
\033]708;$(get_color background)\007
\033]4;0;$(get_color color0)\007
\033]4;1;$(get_color color1)\007
\033]4;2;$(get_color color2)\007
\033]4;3;$(get_color color3)\007
\033]4;4;$(get_color color4)\007
\033]4;5;$(get_color color5)\007
\033]4;6;$(get_color color6)\007
\033]4;7;$(get_color color7)\007
\033]4;8;$(get_color color8)\007
\033]4;9;$(get_color color9)\007
\033]4;10;$(get_color color10)\007
\033]4;11;$(get_color color11)\007
\033]4;12;$(get_color color12)\007
\033]4;13;$(get_color color13)\007
\033]4;14;$(get_color color14)\007
\033]4;15;$(get_color color15)\007
EOF
	escape_msgs=$(printf "$escape_msgs" | tr -d '\n')
	find /dev/pts -exec sh -c "printf \"$escape_msgs\" > {}" \; 2> /dev/null
}

reload_dunst() {
	killall dunst
	dunst &> /dev/null & disown
}

reload_polybar() {
	polybar-msg cmd restart &> /dev/null
}

reload_fcitx5() {
	fcitx5 -rd &> /dev/null & disown
}

switch_cfgs() {
	echo "switching to $1 mode..."
	
	switch_xrdb $1
	switch_dunst $1
	switch_zathura $1
	switch_gtk $1
	switch_fcitx5 $1
	switch_chrome $1
	switch_startpage $1

	mkdir -p ~/.local/share/mode
	echo $1 > ~/.local/share/mode/active
	rm -f ~/.local/share/mode/dark ~/.local/share/mode/light
	touch ~/.local/share/mode/$1
}

[[ $MODE == "restore" ]] && MODE=`cat ~/.local/share/mode/active`
[[ $MODE == "dark" || $MODE == "light" ]] && switch_cfgs $MODE

reload_apps() {
	echo "reloading programs..."

	reload_polybar
	reload_dunst
	reload_terms
	reload_fcitx5
}

reload_apps

